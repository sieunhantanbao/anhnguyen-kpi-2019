// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SD2411.KPI2019.Module.Core.Data;

namespace SD2411.KPI2019.HostStandard.Migrations
{
    [DbContext(typeof(SD2411DBContext))]
    partial class SD2411DBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0-preview6.19304.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SD2411.KPI2019.Module.BookLending.Model.BookLending", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BookId")
                        .HasColumnName("BOOK_ID");

                    b.Property<DateTime>("BorrowDate")
                        .HasColumnName("BORROW_DATE");

                    b.Property<DateTime?>("ReturnDate")
                        .HasColumnName("RETURN_DATE");

                    b.Property<int>("UserId")
                        .HasColumnName("USER_ID");

                    b.HasKey("Id");

                    b.ToTable("tbl_book_lending");
                });

            modelBuilder.Entity("SD2411.KPI2019.Module.Books.Model.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Author")
                        .HasColumnName("AUTHOR");

                    b.Property<bool>("Available2Lend")
                        .HasColumnName("IS_AVAILABLE_TO_LEND");

                    b.Property<int?>("BookCategoryId");

                    b.Property<string>("Description")
                        .HasColumnName("DESCRIPTION");

                    b.Property<string>("Name")
                        .HasColumnName("NAME");

                    b.Property<DateTime>("PublishedDate")
                        .HasColumnName("PUBLISHED_DATE");

                    b.HasKey("Id");

                    b.HasIndex("BookCategoryId");

                    b.ToTable("tbl_book");
                });

            modelBuilder.Entity("SD2411.KPI2019.Module.Books.Model.BookCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnName("DESCRIPTION");

                    b.Property<string>("Name")
                        .HasColumnName("NAME");

                    b.HasKey("Id");

                    b.ToTable("tbl_book_category");
                });

            modelBuilder.Entity("SD2411.KPI2019.Module.Users.Model.UserAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnName("EMAIL");

                    b.Property<string>("FullName")
                        .HasColumnName("FULL_NAME");

                    b.Property<string>("Password")
                        .HasColumnName("PASSWORD");

                    b.Property<string>("UserName")
                        .HasColumnName("USER_NAME");

                    b.HasKey("Id");

                    b.ToTable("tlb_user");
                });

            modelBuilder.Entity("SD2411.KPI2019.Module.Books.Model.Book", b =>
                {
                    b.HasOne("SD2411.KPI2019.Module.Books.Model.BookCategory", "BookCategory")
                        .WithMany("Books")
                        .HasForeignKey("BookCategoryId")
                        .HasConstraintName("FK_BOOK_CATEGORY")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
